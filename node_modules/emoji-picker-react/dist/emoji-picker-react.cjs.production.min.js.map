{"version":3,"file":"emoji-picker-react.cjs.production.min.js","sources":["../src/DomUtils/classNames.ts","../src/DomUtils/focusElement.ts","../src/components/context/ElementRefContext.tsx","../src/types/exposedTypes.ts","../src/config/categoryConfig.ts","../src/dataUtils/DataTypes.ts","../src/data/skinToneVariations.ts","../src/dataUtils/alphaNumericEmojiIndex.ts","../src/dataUtils/emojiSelectors.ts","../src/config/cdnUrls.ts","../src/config/config.ts","../src/components/context/PickerConfigContext.tsx","../src/config/mutableConfig.ts","../src/config/useConfig.ts","../src/hooks/useDebouncedState.ts","../src/hooks/useDisallowedEmojis.ts","../src/components/context/PickerContext.tsx","../src/hooks/useInitialLoad.ts","../src/hooks/useDisallowMouseMove.ts","../src/DomUtils/elementPositionInRow.ts","../src/components/body/EmojiVariationPicker.tsx","../src/components/Layout/Flex.tsx","../src/components/header/SkinTonePicker.tsx","../src/DomUtils/selectors.ts","../src/dataUtils/parseNativeEmoji.ts","../src/dataUtils/suggested.ts","../src/typeRefinements/typeRefinements.ts","../src/hooks/useCloseAllOpenToggles.ts","../src/hooks/useSetVariationPicker.ts","../src/hooks/useMouseDownHandlers.ts","../src/DomUtils/scrollTo.ts","../src/hooks/useFocus.ts","../src/hooks/useFilter.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/components/atoms/Button.tsx","../src/components/emoji/ClickableEmojiButton.tsx","../src/components/emoji/EmojiImg.tsx","../src/components/emoji/NativeEmoji.tsx","../src/components/emoji/ViewOnlyEmoji.tsx","../src/components/emoji/Emoji.tsx","../src/components/body/EmojiCategory.tsx","../src/components/body/Suggested.tsx","../src/components/body/EmojiList.tsx","../src/hooks/useHideEmojisByUniocode.ts","../src/hooks/useIsEmojiHidden.ts","../src/DomUtils/keyboardNavigation.ts","../src/components/body/Body.tsx","../src/hooks/useOnScroll.ts","../src/hooks/useShouldShowSkinTonePicker.ts","../src/components/Layout/Space.tsx","../src/components/Layout/Absolute.tsx","../src/components/Layout/Relative.tsx","../src/components/footer/Preview.tsx","../src/hooks/useEmojiPreviewEvents.ts","../src/hooks/useIsSearchMode.ts","../src/components/navigation/CategoryNavigation.tsx","../src/hooks/useScrollCategoryIntoView.ts","../src/hooks/useActiveCategoryScrollDetection.ts","../src/DomUtils/categoryNameFromDom.ts","../src/hooks/useShouldHideCustomEmojis.ts","../src/components/header/CssSearch.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/header/Search.tsx","../src/components/header/Header.tsx","../src/DomUtils/getActiveElement.ts","../src/hooks/preloadEmoji.ts","../src/components/main/PickerMain.tsx","../src/hooks/useOnFocus.ts","../src/EmojiPickerReact.tsx","../src/components/ErrorBoundary.tsx","../src/components/emoji/ExportedEmoji.tsx","../src/index.tsx"],"sourcesContent":["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker',\n  darkTheme = 'epr-dark-theme',\n  autoTheme = 'epr-auto-theme'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n\nexport function clsx(...args: any[]): string {\n  const classes = args.reduce((classes, arg) => {\n    if (typeof arg === 'string') {\n      classes.push(arg);\n    }\n\n    if (Array.isArray(arg)) {\n      classes.push(clsx(...arg));\n    }\n\n    if (typeof arg === 'object') {\n      Object.entries(arg).forEach(([key, value]) => {\n        if (value) {\n          classes.push(key);\n        }\n      });\n    }\n\n    return classes;\n  }, []);\n\n  return classes.filter(Boolean).join(' ');\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function setCustomEmojis(customEmojis: CustomEmoji[]): void {\n  emojis[Categories.CUSTOM].length = 0;\n\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    emojis[Categories.CUSTOM].push(emojiData as never);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n\n    if (emojiHasVariations(Emoji)) {\n      emojiVariations(Emoji).forEach(variation => {\n        allEmojis[variation] = Emoji;\n      });\n    }\n\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  setCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\nexport const SEARCH_RESULTS_NO_RESULTS_FOUND = 'No results found';\nexport const SEARCH_RESULTS_SUFFIX =\n  ' found. Use up and down arrow keys to navigate.';\nexport const SEARCH_RESULTS_ONE_RESULT_FOUND =\n  '1 result' + SEARCH_RESULTS_SUFFIX;\nexport const SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND =\n  '%n results' + SEARCH_RESULTS_SUFFIX;\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  setCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const mergedConfig = useSetConfig(config);\n\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function useSetConfig(config: PickerConfig) {\n  const [mergedConfig, setMergedConfig] = React.useState(() =>\n    mergeConfig(config)\n  );\n\n  React.useEffect(() => {\n    if (config.customEmojis?.length !== mergedConfig.customEmojis?.length) {\n      setMergedConfig(mergeConfig(config));\n    }\n    // not gonna...\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.customEmojis?.length]);\n\n  return mergedConfig;\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import React from 'react';\n\nimport { EmojiClickData } from '../types/exposedTypes';\n\nexport type MutableConfig = {\n  onEmojiClick?: (emoji: EmojiClickData, event: MouseEvent) => void;\n};\n\nexport const MutableConfigContext = React.createContext<\n  React.MutableRefObject<MutableConfig>\n>({} as React.MutableRefObject<MutableConfig>);\n\nexport function useMutableConfig(): React.MutableRefObject<MutableConfig> {\n  const mutableConfig = React.useContext(MutableConfigContext);\n  return mutableConfig;\n}\n\nexport function useDefineMutableConfig(\n  config: MutableConfig\n): React.MutableRefObject<MutableConfig> {\n  const MutableConfigRef = React.useRef<MutableConfig>({\n    onEmojiClick: config.onEmojiClick || emptyFunc\n  });\n\n  React.useEffect(() => {\n    MutableConfigRef.current.onEmojiClick = config.onEmojiClick || emptyFunc;\n  }, [config.onEmojiClick]);\n\n  return MutableConfigRef;\n}\n\nfunction emptyFunc() {}\n","import { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  SEARCH_RESULTS_NO_RESULTS_FOUND,\n  SEARCH_RESULTS_ONE_RESULT_FOUND,\n  SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\nimport { useMutableConfig } from './mutableConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { current } = useMutableConfig();\n  return current.onEmojiClick || (() => {});\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n\nexport function useSearchResultsConfig(searchResultsCount: number): string {\n  const hasResults = searchResultsCount > 0;\n  const isPlural = searchResultsCount > 1;\n\n  if (hasResults) {\n    return isPlural ?\n      SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND.replace('%n', searchResultsCount.toString())\n        : SEARCH_RESULTS_ONE_RESULT_FOUND;\n  }\n\n  return SEARCH_RESULTS_NO_RESULTS_FOUND;\n}\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariations);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import * as React from 'react';\n\nimport './Flex.css';\nimport { clsx } from '../../DomUtils/classNames';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(unified ?? originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\nimport { useSearchResultsConfig } from '../config/useConfig';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n  const statusSearchResults = getStatusSearchResults(filterRef.current, searchTerm);\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n    statusSearchResults,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n\nfunction getStatusSearchResults(filterState: FilterState, searchTerm: string): string {\n  if (!filterState?.[searchTerm]) return '';\n\n  const searchResultsCount = Object.entries(filterState?.[searchTerm])?.length || 0;\n  return useSearchResultsConfig(searchResultsCount);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { Button } from '../atoms/Button';\nimport './Emoji.css';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariations]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n","import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n","import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport './Emoji.css';\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <h2 className={ClassNames.label}>{categoryName}</h2>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n  const renderdCategoriesCountRef = React.useRef(0);\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            category={category}\n            categoryConfig={categoryConfig}\n            renderdCategoriesCountRef={renderdCategoriesCountRef}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  category,\n  categoryConfig,\n  renderdCategoriesCountRef\n}: {\n  category: Categories;\n  categoryConfig: CategoryConfig;\n  renderdCategoriesCountRef: React.MutableRefObject<number>;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && renderdCategoriesCountRef.current > 0\n      ? []\n      : emojisByCategory(category);\n\n  if (emojisToPush.length > 0) {\n    renderdCategoriesCountRef.current++;\n  }\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import * as React from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport './Preview.css';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(\n    previewEmoji?.unified ?? previewEmoji?.originalUnified\n  );\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji =\n      variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji);\n    if (!defaultEmoji) {\n      return null;\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">{emojiName(emoji)}</div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n      <div\n        className='epr-category-nav'\n        role='tablist'\n        aria-label='Category navigation'\n        id='epr-category-nav-id'\n        ref={CategoryNavigationRef}\n      >\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        const isActiveCategory = category === activeCategory;\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={(isSearchMode || isActiveCategory) ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: isActiveCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n            aria-selected={isActiveCategory}\n            role='tab'\n            aria-controls='epr-category-nav-id'\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n","import * as React from 'react';\n\nimport { ClassNames, asSelectors } from '../../DomUtils/classNames';\nimport { getNormalizedSearchTerm } from '../../hooks/useFilter';\n\nconst SCOPE = `${asSelectors(ClassNames.emojiPicker)} ${asSelectors(\n  ClassNames.emojiList\n)}`;\n\nconst EMOJI_BUTTON = ['button', asSelectors(ClassNames.emoji)].join('');\nconst CATEGORY = asSelectors(ClassNames.category);\n\nexport function CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const q = genQuery(value);\n\n  return (\n    <style>{`\n    ${SCOPE} ${EMOJI_BUTTON} {\n      display: none;\n    }\n\n\n    ${SCOPE} ${q} {\n      display: flex;\n    }\n\n    ${SCOPE} ${CATEGORY}:not(:has(${q})) {\n      display: none;\n    }\n  `}</style>\n  );\n}\n\nfunction genQuery(value: string): string {\n  return [\n    EMOJI_BUTTON,\n    '[data-full-name*=\"',\n    getNormalizedSearchTerm(value),\n    '\"]'\n  ].join('');\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useClearSearch, useFilter } from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { CssSearch } from './CssSearch';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { statusSearchResults, searchTerm, onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        aria-controls=\"epr-search-id\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      {searchTerm ? (\n        <div\n          role=\"status\"\n          className={clsx(\n            'epr-status-search-results',\n            'epr-status-visually-hidden'\n          )}\n          aria-live=\"polite\"\n          id=\"epr-search-id\"\n          aria-atomic=\"true\"\n        >\n          {statusSearchResults}\n        </div>\n      ) : null}\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  \n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        [ClassNames.darkTheme]: theme === Theme.DARK,\n        [ClassNames.autoTheme]: theme === Theme.AUTO\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\n\nimport './EmojiPickerReact.css';\nimport { PickerProps } from './index';\n\nfunction EmojiPicker(props: PickerProps) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  const prevCustomEmojis = prev.customEmojis ?? [];\n  const nextCustomEmojis = next.customEmojis ?? [];\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation &&\n    prevCustomEmojis.length === nextCustomEmojis.length\n  );\n});\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\nimport {\n  MutableConfigContext,\n  useDefineMutableConfig\n} from './config/mutableConfig';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface PickerProps extends PickerConfig {}\n\nexport default function EmojiPicker(props: PickerProps) {\n  const MutableConfigRef = useDefineMutableConfig({\n    onEmojiClick: props.onEmojiClick\n  });\n\n  return (\n    <ErrorBoundary>\n      <MutableConfigContext.Provider value={MutableConfigRef}>\n        <EmojiPickerReact {...props} />\n      </MutableConfigContext.Provider>\n    </ErrorBoundary>\n  );\n}\n"],"names":["ClassNames","asSelectors","classNames","map","c","join","clsx","args","classes","reduce","arg","push","Array","isArray","Object","entries","forEach","filter","Boolean","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","categoriesOrdered","SUGGESTED","CUSTOM","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","name","category","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","assign","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","acc","skinTonesMapped","mapped","skinTone","alphaNumericEmojiIndex","indexEmoji","emoji","emojiNames","flat","toLowerCase","replace","split","char","emojiUnified","emojiName","unifiedWithoutSkinTone","unified","splat","splice","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","variations","length","emojiByUnified","allEmojisByUnified","withoutSkinTone","setTimeout","allEmojis","searchIndex","values","Emoji","KNOWN_FAILING_EMOJIS","mergeConfig","userConfig","customEmojis","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","emojiData","names","id","added_in","imgUrl","customToRegularEmoji","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","basePreviewConfig","searchPlaceHolder","searchPlaceholder","SEARCH","skinTonesDisabled","FREQUENT","theme","unicodeToHide","Set","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","mergedConfig","setMergedConfig","_mergedConfig$customE","_config$customEmojis2","useSetConfig","usePickerConfig","MutableConfigContext","createContext","emptyFunc","useSkinTonesDisabledConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useSearchDisabledConfig","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","window","_window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","emojiVariationPickerState","isPastInitialLoad","useEffect","PickerContext","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","lastRow","slice","getElementInRow","indexInRow","rowElements","Direction","FlexDirection","SkinTonePickerDirection","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","matches","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getSuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","isCustomEmoji","undefined","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","emojiFromEvent","event","parentElement","_element$parentElemen","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","setSearchTerm","then","hasMatch","keyword","some","getNormalizedSearchTerm","str","trim","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Button","props","className","ClickableEmojiButton","hiddenOnSearch","showVariations","hasVariations","EmojiImg","lazyLoad","onError","src","alt","external","loading","NativeEmoji","ViewOnlyEmoji","size","setEmojisThatFailedToLoad","fontSize","emojiToRender","NATIVE","add","ClickableEmoji","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedUpdated","suggestedEmojisModeConfig","suggested","suggestedItem","original","key","EmojiList","renderdCategoriesCountRef","emojiList","RenderCategory","isUnicodeHidden","emojisThatFailedToLoad","isEmojiFiltered","isEmojiHidden","_filter$searchTerm","isEmojiFilteredBySearchTerm","failedToLoad","has","filteredOut","isEmojiDisallowed","emojisToPush","hiddenCounter","isDisallowed","focusFirstVisibleEmoji","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","bodyRef","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","pointing-up","concat","Body","closeAllOpenToggles","addEventListener","onScroll","passive","removeEventListener","useOnScroll","mouseDownTimerRef","onEmojiClick","useContext","updateSuggested","activeEmojiStyle","onClick","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","i","min","setItem","stringify","setSuggested","getImageUrl","imageUrl","isCustom","emojiClickOutput","onMouseDown","onMouseUp","useMouseDownHandlers","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","useIsSkinToneInSearch","useIsSkinToneInPreview","Flex","ROW","Space","flex","Absolute","position","Relative","SkinTonePickerMenu","right","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","setActiveSkinTone","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","transform","tabIndex","Preview","isSkinToneInPreview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","$category","_BodyRef$current","visibleCategories","Map","observer","IntersectionObserver","entry","getAttribute","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","customCategoryConfig","isSearchMode","categoriesConfig","hideCustomCategory","role","isActiveCategory","isCustomCategory","KeyboardEvents","SCOPE","emojiPicker","EMOJI_BUTTON","CATEGORY","CssSearch","q","genQuery","SearchContainer","isSkinToneInSearch","Search","inc","setInc","clearSearch","placeholder","p","autoFocus","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","longestMatch","dict","longestMatchingKey","keys","findLongestMatch","filtered","filterEmojiObjectByKeyword","statusSearchResults","filterState","searchResultsCount","toString","getStatusSearchResults","useFilter","input","onFocus","_event$target","Header","getActiveElement","activeElement","useGoDownFromSearchInput","focusCategoryNavigation","focusNextSkinTone","exitLeft","currentSkinTone","focusPrevSkinTone","useOnType","appendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preventDefault","preloadedEmojs","PickerMain","PickerRootElement","searchModeActive","usePickerSizeConfig","focusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","onKeyDown","hasOpenToggles","disallowMouseMove","Escape","usePickerMainKeyboardEvents","firstEmoji","ArrowRight","ArrowDown","Enter","click","onType","ArrowLeft","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","nextVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","index","nextRowElements","allElements","currentRow","nextRow","countInRow","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","exitUp","prevRowElements","prevVisibleCategory","visibleEmojiOneRowUp","focusVisibleEmojiOneRowUp","useBodyKeyboardEvents","useKeyboardNavigation","url","Image","preloadEmoji","searchActive","darkTheme","autoTheme","AUTO","EmojiPicker","prevCustomEmojis","nextCustomEmojis","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","emojiUrl","MutableConfigRef","useDefineMutableConfig","EmojiPickerReact"],"mappings":"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"}